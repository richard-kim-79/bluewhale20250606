"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/login/page",{

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAPI: function() { return /* binding */ authAPI; },\n/* harmony export */   contentAPI: function() { return /* binding */ contentAPI; },\n/* harmony export */   notificationAPI: function() { return /* binding */ notificationAPI; },\n/* harmony export */   userAPI: function() { return /* binding */ userAPI; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Base URL for API requests\nconst API_BASE_URL = \"http://localhost:3001\" || 0;\n// Create axios instance with default config\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Request interceptor for adding auth token\napiClient.interceptors.request.use((config)=>{\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Response interceptor for handling common errors\napiClient.interceptors.response.use((response)=>{\n    return response;\n}, (error)=>{\n    // Handle 401 Unauthorized errors (token expired)\n    if (error.response && error.response.status === 401) {\n        // Clear local storage and redirect to login\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"user\");\n        window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n});\n// Auth API\nconst authAPI = {\n    login: async (email, password)=>{\n        const response = await apiClient.post(\"/auth/login\", {\n            email,\n            password\n        });\n        return response.data;\n    },\n    register: async (email, password)=>{\n        const response = await apiClient.post(\"/auth/register\", {\n            email,\n            password\n        });\n        return response.data;\n    },\n    getCurrentUser: async ()=>{\n        const response = await apiClient.get(\"/auth/me\");\n        return response.data;\n    },\n    logout: async ()=>{\n        const response = await apiClient.post(\"/auth/logout\");\n        return response.data;\n    }\n};\n// Content API\nconst contentAPI = {\n    // Get all content with optional filters\n    getContent: async (params)=>{\n        const response = await apiClient.get(\"/content\", {\n            params\n        });\n        return response.data;\n    },\n    // Get global top content ranked by AI score\n    getGlobalTopContent: async (params)=>{\n        const response = await apiClient.get(\"/content/global-top\", {\n            params\n        });\n        return response.data;\n    },\n    // Get personalized content for the current user\n    getPersonalizedContent: async (params)=>{\n        const response = await apiClient.get(\"/content/personalized\", {\n            params\n        });\n        return response.data;\n    },\n    // Get local content based on location\n    getLocalContent: async (params)=>{\n        const response = await apiClient.get(\"/content/local\", {\n            params\n        });\n        return response.data;\n    },\n    // Get content by ID\n    getContentById: async (id)=>{\n        const response = await apiClient.get(\"/content/\".concat(id));\n        return response.data;\n    },\n    // Create new content\n    createContent: async (data)=>{\n        const response = await apiClient.post(\"/content\", data, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    // Update content\n    updateContent: async (id, data)=>{\n        const response = await apiClient.put(\"/content/\".concat(id), data, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    // Delete content\n    deleteContent: async (id)=>{\n        const response = await apiClient.delete(\"/content/\".concat(id));\n        return response.data;\n    },\n    // Search content\n    searchContent: async (query, params)=>{\n        const response = await apiClient.get(\"/content/search\", {\n            params: {\n                query,\n                ...params\n            }\n        });\n        return response.data;\n    },\n    // Get user's content\n    getUserContent: async (userId, params)=>{\n        const endpoint = userId ? \"/content/user/\".concat(userId) : \"/content/my-content\";\n        const response = await apiClient.get(endpoint, {\n            params\n        });\n        return response.data;\n    },\n    // Save content (bookmark)\n    saveContent: async (contentId)=>{\n        const response = await apiClient.post(\"/content/\".concat(contentId, \"/save\"));\n        return response.data;\n    },\n    // Unsave content (remove bookmark)\n    unsaveContent: async (contentId)=>{\n        const response = await apiClient.delete(\"/content/\".concat(contentId, \"/save\"));\n        return response.data;\n    },\n    // Get saved content\n    getSavedContent: async (params)=>{\n        const response = await apiClient.get(\"/content/saved\", {\n            params\n        });\n        return response.data;\n    }\n};\n// Notification API\nconst notificationAPI = {\n    // Get all notifications for current user\n    getNotifications: async (params)=>{\n        const response = await apiClient.get(\"/notifications\", {\n            params\n        });\n        return response.data;\n    },\n    // Mark notification as read\n    markAsRead: async (notificationId)=>{\n        const response = await apiClient.put(\"/notifications/\".concat(notificationId, \"/read\"));\n        return response.data;\n    },\n    // Mark all notifications as read\n    markAllAsRead: async ()=>{\n        const response = await apiClient.put(\"/notifications/read-all\");\n        return response.data;\n    },\n    // Get unread notification count\n    getUnreadCount: async ()=>{\n        const response = await apiClient.get(\"/notifications/unread-count\");\n        return response.data;\n    }\n};\n// User API\nconst userAPI = {\n    // Get user profile\n    getUserProfile: async (userId)=>{\n        const response = await apiClient.get(\"/users/\".concat(userId));\n        return response.data;\n    },\n    // Update user profile\n    updateUserProfile: async (data)=>{\n        const formData = new FormData();\n        if (data.name) formData.append(\"name\", data.name);\n        if (data.bio) formData.append(\"bio\", data.bio);\n        if (data.avatar) formData.append(\"avatar\", data.avatar);\n        const response = await apiClient.put(\"/users/profile\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    // Follow a user\n    followUser: async (userId)=>{\n        const response = await apiClient.post(\"/users/\".concat(userId, \"/follow\"));\n        return response.data;\n    },\n    // Unfollow a user\n    unfollowUser: async (userId)=>{\n        const response = await apiClient.delete(\"/users/\".concat(userId, \"/follow\"));\n        return response.data;\n    },\n    // Get user's followers\n    getUserFollowers: async (userId, params)=>{\n        const response = await apiClient.get(\"/users/\".concat(userId, \"/followers\"), {\n            params\n        });\n        return response.data;\n    },\n    // Get users that a user is following\n    getUserFollowing: async (userId, params)=>{\n        const response = await apiClient.get(\"/users/\".concat(userId, \"/following\"), {\n            params\n        });\n        return response.data;\n    },\n    // Search for users\n    searchUsers: async (query, params)=>{\n        const response = await apiClient.get(\"/users/search\", {\n            params: {\n                query,\n                ...params\n            }\n        });\n        return response.data;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    auth: authAPI,\n    content: contentAPI,\n    notifications: notificationAPI,\n    user: userAPI\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ })

});